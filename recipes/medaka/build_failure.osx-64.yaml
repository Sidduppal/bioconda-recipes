recipe_sha: fe8244e36e00fce9b146f015c871e6714fe382a6b7375f652967216782b9cb0f  # The hash of the recipe's meta.yaml at which this recipe failed to build.
skiplist: false # Set to true to skiplist this recipe so that it will be ignored as long as its latest commit is the one given above.
log: |2-
      precs = get_package_records(
    File "/opt/mambaforge/envs/bioconda/lib/python3.10/site-packages/conda_build/environ.py", line 937, in get_install_actions
      precs = get_package_records(
    File "/opt/mambaforge/envs/bioconda/lib/python3.10/site-packages/conda_build/environ.py", line 937, in get_install_actions
      precs = get_package_records(
    File "/opt/mambaforge/envs/bioconda/lib/python3.10/site-packages/conda_build/environ.py", line 891, in get_install_actions
      precs = _install_actions(prefix, index, specs)["LINK"]
    File "/opt/mambaforge/envs/bioconda/lib/python3.10/site-packages/conda_build/environ.py", line 1301, in install_actions
      txn = solver.solve_for_transaction(prune=False, ignore_pinned=False)
    File "/opt/mambaforge/envs/bioconda/lib/python3.10/site-packages/conda/core/solve.py", line 153, in solve_for_transaction
      unlink_precs, link_precs = self.solve_for_diff(
    File "/opt/mambaforge/envs/bioconda/lib/python3.10/site-packages/conda/core/solve.py", line 222, in solve_for_diff
      final_precs = self.solve_final_state(
    File "/opt/mambaforge/envs/bioconda/lib/python3.10/site-packages/conda_libmamba_solver/solver.py", line 223, in solve_final_state
      out_state = self._solving_loop(in_state, out_state, index)
    File "/opt/mambaforge/envs/bioconda/lib/python3.10/site-packages/conda_libmamba_solver/solver.py", line 303, in _solving_loop
      solved = self._solve_attempt(in_state, out_state, index, attempt=attempt)
    File "/opt/mambaforge/envs/bioconda/lib/python3.10/site-packages/conda_libmamba_solver/solver.py", line 414, in _solve_attempt
      new_conflicts = self._maybe_raise_for_problems(
    File "/opt/mambaforge/envs/bioconda/lib/python3.10/site-packages/conda_libmamba_solver/solver.py", line 712, in _maybe_raise_for_problems
      self._maybe_raise_for_conda_build(
    File "/opt/mambaforge/envs/bioconda/lib/python3.10/site-packages/conda_libmamba_solver/solver.py", line 805, in _maybe_raise_for_conda_build
      raise exc
  conda_libmamba_solver.conda_build_exceptions.ExplainedDependencyNeedsBuildingError: Unsatisfiable dependencies for platform osx-64: {MatchSpec("python_abi=3.10[build=*_cp310]"), MatchSpec("tensorflow==2.10.0=cpu_py310h22f808f_0")}
  Encountered problems while solving:
    - package tensorflow-2.10.0-cpu_py310h22f808f_0 requires python_abi 3.10.* *_cp310, but none of the providers can be installed

  Could not solve for environment specs
  The following packages are incompatible
   openssl >=1.1.1w,<1.1.2a  is requested and can be installed;
   pysam >=0.16.0.1  is installable with the potential options
     pysam [0.16.0.1|0.17.0|...|0.20.0] would require
       python_abi 2.7.* *_cp27m, which can be installed;
     pysam [0.16.0.1|0.17.0|...|0.21.0] would require
       python_abi 3.6.* *_cp36m, which can be installed;
     pysam [0.16.0.1|0.17.0|...|0.20.0] would require
       python_abi 3.7.* *_cp37m, which can be installed;
     pysam [0.16.0.1|0.17.0|...|0.20.0] would require
       python_abi 3.8.* *_cp38, which can be installed;
     pysam [0.16.0.1|0.17.0|...|0.20.0] would require
       python_abi 3.9.* *_cp39, which can be installed;
     pysam [0.19.1|0.20.0] would require
       python_abi 3.10.* *_cp310, which can be installed;
     pysam 0.21.0 would require
       libcurl >=8.1.1,<9.0a0  but there are no viable options
          libcurl [7.88.1|8.1.1|8.1.2] would require
            openssl >=3.1.0,<4.0a0 , which conflicts with any installable versions previously reported;
          libcurl [8.1.2|8.2.0|8.2.1] would require
            openssl >=3.1.1,<4.0a0 , which conflicts with any installable versions previously reported;
          libcurl 8.3.0 would require
            openssl >=3.1.2,<4.0a0 , which conflicts with any installable versions previously reported;
          libcurl 8.4.0 would require
            openssl >=3.1.3,<4.0a0 , which conflicts with any installable versions previously reported;
          libcurl 8.5.0 would require
            openssl >=3.2.0,<4.0a0 , which conflicts with any installable versions previously reported;
          libcurl [8.6.0|8.7.1] would require
            openssl >=3.2.1,<4.0a0 , which conflicts with any installable versions previously reported;
          libcurl 8.8.0 would require
             openssl >=3.3.0,<4.0a0 , which conflicts with any installable versions previously reported;
     pysam 0.21.0 would require
       libcurl >=7.88.1,<8.0a0  but there are no viable options
          libcurl 7.88.1 would require
            openssl >=3.0.8,<4.0a0 , which conflicts with any installable versions previously reported;
          libcurl [7.88.1|8.1.1|8.1.2], which cannot be installed (as previously explained);
     pysam 0.22.0 would require
       libcurl >=8.4.0,<9.0a0 , which cannot be installed (as previously explained);
     pysam 0.22.0 would require
       libcurl >=8.5.0,<9.0a0 , which cannot be installed (as previously explained);
     pysam 0.22.1 would require
       libcurl >=8.7.1,<9.0a0 , which cannot be installed (as previously explained);
     pysam 0.22.1 would require
        libcurl >=8.8.0,<9.0a0 , which cannot be installed (as previously explained);
   python >=3.11,<3.12.0a0  is not installable because there are no viable options
     python 3.11.0 would require
       python_abi 3.11.* *_cp311, which conflicts with any installable versions previously reported;
     python 3.11.0 would require
       openssl >=3.0.5,<4.0a0 , which conflicts with any installable versions previously reported;
     python 3.11.0 would require
       openssl >=3.0.7,<4.0a0 , which conflicts with any installable versions previously reported;
     python [3.11.1|3.11.2|3.11.3] would require
       openssl >=3.1.0,<4.0a0 , which conflicts with any installable versions previously reported;
     python 3.11.4 would require
       openssl >=3.1.1,<4.0a0 , which conflicts with any installable versions previously reported;
     python 3.11.5 would require
       openssl >=3.1.2,<4.0a0 , which conflicts with any installable versions previously reported;
     python 3.11.6 would require
       openssl >=3.1.3,<4.0a0 , which conflicts with any installable versions previously reported;
     python 3.11.7 would require
       openssl >=3.2.0,<4.0a0 , which conflicts with any installable versions previously reported;
     python [3.11.8|3.11.9] would require
        openssl >=3.2.1,<4.0a0 , which conflicts with any installable versions previously reported;
   tensorflow >=2.10,<2.11  is installable with the potential options
      tensorflow 2.10.0 would require
        python_abi 3.10.* *_cp310, which can be installed;
      tensorflow 2.10.0 would require
        python_abi 3.7.* *_cp37m, which can be installed;
      tensorflow 2.10.0 would require
        python_abi 3.8.* *_cp38, which can be installed;
      tensorflow 2.10.0 would require
         python_abi 3.9.* *_cp39, which can be installed.
# Last 100 lines of the build log.
